'use strict'; function _possibleConstructorReturn(a, b) { if (!a) throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called'); return b && ('object' == typeof b || 'function' == typeof b) ? b : a } function _inherits(a, b) { if ('function' != typeof b && null !== b) throw new TypeError('Super expression must either be null or a function, not ' + typeof b); a.prototype = Object.create(b && b.prototype, { constructor: { value: a, enumerable: !1, writable: !0, configurable: !0 } }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b) } function _classCallCheck(a, b) { if (!(a instanceof b)) throw new TypeError('Cannot call a class as a function') } var DomListener = function a() { _classCallCheck(this, a) }, ExcelComponent = function (a) { function b() { return _classCallCheck(this, b), _possibleConstructorReturn(this, a.apply(this, arguments)) } return _inherits(b, a), b.prototype.toHTML = function toHTML() { return '' }, b }(DomListener), Excel = function () { function a(b, c) { _classCallCheck(this, a), this.$el = document.querySelector(b), this.components = c.components || [] } return a.prototype.getRoot = function getRoot() { var b = document.createElement('div'); return this.components.forEach(function (c) { var d = new c; b.insertAdjacentHTML('beforeend', d.toHTML()) }), b }, a.prototype.render = function render() { this.$el.append(this.getRoot()) }, a }(), Header = function (a) { function b() { return _classCallCheck(this, b), _possibleConstructorReturn(this, a.apply(this, arguments)) } return _inherits(b, a), b.prototype.toHTML = function toHTML() { return '<h1>Header</h1>' }, b }(ExcelComponent), Toolbar = function (a) { function b() { return _classCallCheck(this, b), _possibleConstructorReturn(this, a.apply(this, arguments)) } return _inherits(b, a), b.prototype.toHTML = function toHTML() { return '<h1>Toolbar</h1>' }, b }(ExcelComponent), Formula = function (a) { function b() { return _classCallCheck(this, b), _possibleConstructorReturn(this, a.apply(this, arguments)) } return _inherits(b, a), b.prototype.toHTML = function toHTML() { return '<h1>Formula</h1>' }, b }(ExcelComponent), Table = function (a) { function b() { return _classCallCheck(this, b), _possibleConstructorReturn(this, a.apply(this, arguments)) } return _inherits(b, a), b.prototype.toHTML = function toHTML() { return '<h1>Table</h1>' }, b }(ExcelComponent), excel = new Excel('#app', { components: [Header, Toolbar, Formula, Table] }); excel.render();

// ?
// ?	                            _____
// ?	                            /___\
// ?	 _< _/_-_\_/_-_             \"_"/            _-_\_/_-_\_ >_
// ?	                           __|_|__
// ?	                          //"_-_"\\
// ?	                         //|_____|\\
// ?	                        // \ |_| / \\
// ?	                       |_| |\___/| |_|
// ?	                           ||   ||
// ?	                           ||   ||
// ?	                          |__| |__|
// ?	
// ?     It's property of Mr. Darov ----- Created by Rinat Samandarov ! ----- In Js Excel course by Vladilen Minin.
// ?
// ?